# Snippets for Puppet

snippet /^class/ "Class declaration" !r
class ${1:name}
{
  ${0:# body}
}
endsnippet

snippet File "Defaults for file" !b
File
{
  owner => ${1:username},
  group => ${2:groupname},
}
endsnippet

# Resource types
snippet package "Package resource type" !b
package
{
  "${1:name}":
    ensure => ${2:installed},
}
endsnippet

snippet file "File resource type" !b
file
{
  "${1:name}":
    ensure => ${2:present},
    source => "puppet:///modules/${3:path}",
    mode   => ${4:mode},
}
endsnippet

snippet group "Group resource type" !b
group
{
  "${1:groupname}":
    ensure => ${2:present},
    gid    => ${3:gid},
}
endsnippet

snippet user "user resource type" !b
user
{
  "${1:username}":
    ensure     => ${2:present},
    uid        => ${3:uid},
    gid        => ${4:gid},
    comment    => ${5:gecos},
    home       => ${6:homedirectory},
    managehome => false,
    require    => Group["${7:group"],
}
endsnippet

snippet exec "Exec resource type" !b
exec
{
  "${1:command-name}":
    command => "${2:command}"
}
endsnippet

snippet cron "Cron resource type" !b
cron
{
  "${1:name}":
    ensure  => ${2:present},
    user    => ${3:user},
    command => "${4:command}",
    minute  => ${5:minute},
}
endsnippet

snippet mount "Mount resource type" !b
mount
{
  "${1:path}":
    ensure  => mounted,
    device  => "${2:/dev}",
    fstype  => "${3:filesystem}",
    options => "rw,errors=remount-ro",
}
endsnippet

snippet service "Service resource type" !b
service
{
  "${1:name}":
    ensure    => running,
    hasstatus => true,
    enable    => true,
}
endsnippet
